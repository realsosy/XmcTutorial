package Model.APPS.I2C_MASTER.v4_1_18.Templates;

import Model.APPS.I2C_MASTER.v4_1_18.I2C_MASTER

out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2015-2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-02-16:
 *     - Initial version<br>
 *
 * @endcond
 *
 */

#ifndef I2C_MASTER_CONF_H
#define I2C_MASTER_CONF_H

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/

/**********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/
""");

String appInst  = null;
Integer dma_tx_instance = 0;
Integer dma_rx_instance = 0;
Integer intr_tx_instance = 0;
Integer intr_rx_instance = 0;
Integer direct_tx_instance = 0;
Integer direct_rx_instance = 0;

out.print("""
#define I2C_MASTER_MAJOR_VERSION ${(I2C_MASTER.version).findAll( /\d+/ )*.toInteger()[0]}U
#define I2C_MASTER_MINOR_VERSION ${(I2C_MASTER.version).findAll( /\d+/ )*.toInteger()[1]}U
#define I2C_MASTER_PATCH_VERSION ${(I2C_MASTER.version).findAll( /\d+/ )*.toInteger()[2]}U
""");

for (I2C_MASTER i2cInst : appInstancesList )
{
	appInst = i2cInst.getInstanceLabel()
if(i2cInst.gcombo_tx_mode.value == "DMA")
{
	dma_tx_instance++;
}
if(i2cInst.gcombo_rx_mode.value == "DMA")
{
	dma_rx_instance++;
}

if(i2cInst.gcombo_tx_mode.value == "Direct")
{
	direct_tx_instance++;
}
if(i2cInst.gcombo_rx_mode.value == "Direct")
{
	direct_rx_instance++;
}

if(i2cInst.gcombo_tx_mode.value == "Interrupt")
{
	intr_tx_instance++;
}
if(i2cInst.gcombo_rx_mode.value == "Interrupt")
{
	intr_rx_instance++;
}

}

if(dma_tx_instance > 0)
{
out.print("""\n#define I2C_MASTER_DMA_TX_ENABLED 1""");
}
else
{
out.print("""\n#define I2C_MASTER_DMA_TX_ENABLED 0""");
}
if(dma_rx_instance > 0)
{
out.print("""\n#define I2C_MASTER_DMA_RX_ENABLED 1""");
}
else
{
out.print("""\n#define I2C_MASTER_DMA_RX_ENABLED 0""");
}

if(direct_tx_instance > 0)
{
out.print("""\n#define I2C_MASTER_DIRECT_TX_ENABLED 1""");
}
else
{
out.print("""\n#define I2C_MASTER_DIRECT_TX_ENABLED 0""");
}
if(direct_rx_instance > 0)
{
out.print("""\n#define I2C_MASTER_DIRECT_RX_ENABLED 1""");
}
else
{
out.print("""\n#define I2C_MASTER_DIRECT_RX_ENABLED 0""");
}

if(intr_tx_instance > 0)
{
out.print("""\n#define I2C_MASTER_INTERRUPT_TX_ENABLED 1""");
}
else
{
out.print("""\n#define I2C_MASTER_INTERRUPT_TX_ENABLED 0""");
}
if(intr_rx_instance > 0)
{
out.print("""\n#define I2C_MASTER_INTERRUPT_RX_ENABLED 1""");
}
else
{
out.print("""\n#define I2C_MASTER_INTERRUPT_RX_ENABLED 0""");
}

out.print("""

#endif /* End of I2C_MASTER_CONF_H */
""");

