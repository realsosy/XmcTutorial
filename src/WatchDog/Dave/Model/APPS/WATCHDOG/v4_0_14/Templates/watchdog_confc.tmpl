package Model.APPS.WATCHDOG.v4_0_14.Templates;

import Model.APPS.WATCHDOG.v4_0_14.WATCHDOG

out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-02-16:
 *     - Initial version<br>
 *
 * 2015-05-08:
 *     - Updated according to the manifest guidelines<br>
 *
 * @endcond
 *
 */

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
/* Included to access WATCHDOG app data structure, functions & enumerations */
#include "watchdog.h"
/***********************************************************************************************************************
* DATA STRUCTURES
***********************************************************************************************************************/
""");

List MappedUri = null
String appInst  = null

for (Object appIns : appInstancesList ) {
appInst = appIns.getInstanceLabel()
MappedUri = appIns.hwres_wdt_wdt.getSolverUri()
/* This is the GUI configurations made for WATCHDOG app Instance */
if (MappedUri != null) {
/**
 * @brief Contents entered via GUI
 */
            out.print("""
XMC_WDT_CONFIG_t ${appInst}_Config =
{
  .window_upper_bound   = 0x${appIns.watchdog_upper_bound.value}U, /* Service Window UpperBound time */
  .window_lower_bound   = 0x${appIns.watchdog_lower_bound.value}U, /* Service Window LowerBound time */
  .prewarn_mode         = ${appIns.gcheck_prewarningevent.value}, /* WatchDog Timer Mode */
  .run_in_debug_mode    = 0U, /* WatchDog Timer status during Debug Mode */
  .service_pulse_width  = ${appIns.ginteger_service_pulse_width.value-1}U /* Service Indication Pulse Width */
};
                   """);
  if((appIns.gcheck_prewarningevent.value == true) && (appIns.gcombo_servicerequest.value == 'Via Interrupt'))
  {			   
		    out.print("""
WATCHDOG_t ${appInst} = 
{
  .config               = &${appInst}_Config, /* WDT configuration Handle */
  .scu_global_handler   = &${appIns.appres_scuglobalapp.getInstanceLabel()}, /* pointer to SCU_GLOBAL APP instance */
  .callback_func_ptr    = ${if((appIns.gstring_eventhandler.value != '') && (appIns.gcheck_prewarningevent.value == true)) '&'+appIns.gstring_eventhandler.value else 'NULL'}, /* User Callback function pointer */
  .initialized          = false /* Initialization flag*/
};
            """);
  }
  else
  {
	out.print("""
WATCHDOG_t ${appInst} = 
{
  .config               = &${appInst}_Config, /* WDT configuration Handle */
  .initialized          = false /* Initialization flag*/
};
            """);
  }

} else  {
           out.print("""
  /* WATCHDOG RESOURCE NOT MAPPED */
           """);
   }
}/* End of for loop */
