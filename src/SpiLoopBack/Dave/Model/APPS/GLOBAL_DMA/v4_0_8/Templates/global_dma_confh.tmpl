package Model.APPS.GLOBAL_DMA.v4_0_8.Templates;

import Model.APPS.GLOBAL_DMA.v4_0_8.GLOBAL_DMA


out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 * Copyright (c) 2015, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-02-20:
 *     - Initial version <br>
 *
 * 2015-06-20:
 *     - Automatically generate the APP version number <br>
 *
 * @endcond
 */

#ifndef GLOBAL_DMA_CONF_H
#define GLOBAL_DMA_CONF_H

/* Support for C++ */
#ifdef __cplusplus
extern "C" {
#endif
""")

out.print("""
/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
 
/**********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/
""")

out.print("""
#define GLOBAL_DMA_MAJOR_VERSION (${(GLOBAL_DMA.version).findAll( /\d+/ )*.toInteger()[0]}U) /**< Major version */
#define GLOBAL_DMA_MINOR_VERSION (${(GLOBAL_DMA.version).findAll( /\d+/ )*.toInteger()[1]}U) /**< Minor version */
#define GLOBAL_DMA_PATCH_VERSION (${(GLOBAL_DMA.version).findAll( /\d+/ )*.toInteger()[2]}U) /**< Patch version */
""");

def instance = 0
def inner_space = '    '
def outer_space = '  '
def temp = 0
def UnitInst 	= null
def irq_node = null
def s = null // some string
def MappedUri_channel = null
def MappedUri_dlr = null
def which_dma = null

// This gets the GPDMA module (1 or 0)
def get_gpdma_module (def which_dma) {
	if (which_dma == 'dma4')
		return 1
	return 0
}

// generates n spaces
def gen_space (def n) {
	def str = ""
	for (int i = 0; i < n; i++) {
		str += " "
	}
	return str
}

for (Object i : appInstancesList) {
	appInst = i.getInstanceLabel();
	MappedUri_channel = i.rg_nvicnodedma.getSolverUri()
	
	if (MappedUri_channel != null) {
		which_dma = MappedUri_channel[3]
		UnitInst = MappedUri_channel[4]
		irq_node = MappedUri_channel[7]
	} else { // if (MappedUri_channel != null) {
		out.print("""/* GLOBAL_DMA APP is not mapped for APP instance: ${instance} */""")
	}
instance++;
}

out.print("""
/* Support for C++ */
#ifdef __cplusplus
}
#endif

#endif  /* ifndef GLOBAL_DMA_CONF_H */
""")
