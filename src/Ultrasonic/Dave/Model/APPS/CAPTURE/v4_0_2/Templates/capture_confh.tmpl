package Model.APPS.CAPTURE.v4_0_2.Templates;

import Model.APPS.CAPTURE.v4_0_2.CAPTURE

out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2016-07-01:
 *     - Initial version<br>
 *
 * @endcond
 *
 */

#ifndef CAPTURE_CONF_H 
#define CAPTURE_CONF_H

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/


/***********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/
#define CAPTURE_MAJOR_VERSION (${CAPTURE.version.split("\\.")[0]}U)
#define CAPTURE_MINOR_VERSION (${CAPTURE.version.split("\\.")[1]}U)
#define CAPTURE_PATCH_VERSION (${CAPTURE.version.split("\\.")[2]}U)
""")

List MappedUri = null
String appInst  = null
Integer ccu4_inst = 0
Integer ccu8_inst = 0
Integer interrupt_inst = 0
Integer expose_pin = 0
String capture_node = null

for (Object appIns : appInstancesList ) {
  appInst = appIns.getInstanceLabel()
    
  if (appIns.gcheck_capture_event.value)
  {
    if (appIns.hwres_cpu_nvic_interrupt_event_0.getSolverUri() != null)
    {
      List cap_interrupt_Uri = appIns.hwres_cpu_nvic_interrupt_event_0.getSolverUri()
      capture_node = cap_interrupt_Uri[-1]
      if ((appIns.gcheck_capture_event.value) && (appIns.gstring_capture_callback.value != null))
      {
      out.print("""
#define ${appInst}_IRQHandler  IRQ_Hdlr_${capture_node}
                """);
      }
    }
  }
  if(appIns.gcombo_select_timer.value == 'CCU4')
  {
    ccu4_inst++;
  }
  
  if(appIns.gcombo_select_timer.value == 'CCU8')
  {
    ccu8_inst++;
  }
  
  if(appIns.gcombo_input_source.value == "GPIO")
  {
    expose_pin++
  }
  if(appIns.gcheck_capture_event.value == true)
  {
    interrupt_inst++
  }
}

if(ccu4_inst > 0)
{
out.print("""
/** This enables the functionality for the CCU4 capture */
#define CAPTURE_CCU4_USED
""")
}
if(ccu8_inst > 0)
{
out.print("""
/** This enables the functionality for the CCU8 capture */
#define CAPTURE_CCU8_USED
""")
}
if(expose_pin > 0)
{
out.print("""
/** This enables the usage of the pin */
#define CAPTURE_GPIO_USED
""")
}
if(interrupt_inst > 0)
{
out.print("""
/** This enables the Interrupt functionality */
#define CAPTURE_INTERRUPT_ENABLED
""")
}
out.print("""
#endif /* CAPTURE_CONF_H */
""");
