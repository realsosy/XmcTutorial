package Model.APPS.GLOBAL_CCU4.v4_1_12.Templates;

import Model.APPS.GLOBAL_CCU4.v4_1_12.GLOBAL_CCU4

out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-02-16:
 *     - Initial version<br>
 *
 * 2015-05-08:
 *     - New parameter "syncstart_trigger_msk" is added in APP handle to start the specific kernel/s<br>
 *
 * @endcond
 *
 */

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
#include "global_ccu4.h"

/***********************************************************************************************************************
* DATA STRUCTURES
***********************************************************************************************************************/
""");

List MappedUri = null
String appInst  = null
String kernelno = null
String module_clock = null

Map mcms_action = [
	'Period and Compare' : 'XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR',
	'Period, Compare and Prescaler' : 'XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP',
	'Period, Compare, Prescaler and Dither' : 'XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT'
	]

for (Object appIns : appInstancesList )
{
  appInst = appIns.getInstanceLabel()
  MappedUri = appIns.hwres_peripheral_ccu4_global.getSolverUri()
  kernelno = MappedUri[4]  
  
  /**********************************Dummy read*************************************/
  module_clock = appIns.hwres_peripheral_ccu4_global.getRegValue("gctrl", "gctrl_pcis")
  
  /*********************************************************************************/

        
out.print("""   
/**< Configuration for Handle${appInst} */
GLOBAL_CCU4_t ${appInst} =
{
  .module_frequency = ${((appIns.gfloat_clkFreq.value.round(4))*(10.power(6))).toInteger()}U,  /**< CCU4 input clock frequency */
  .syncstart_trigger_msk = XMC_SCU_CCU_TRIGGER_CCU4${kernelno}, 
  .module_ptr = (XMC_CCU4_MODULE_t*) CCU4${kernelno},      /**< CCU4 Module Pointer */
  .mcs_action = (XMC_CCU4_SLICE_MCMS_ACTION_t)${mcms_action[appIns.gcombo_mc_shadow_tx_function.value]},
  .is_initialized = false
};

""")
   
}
 

