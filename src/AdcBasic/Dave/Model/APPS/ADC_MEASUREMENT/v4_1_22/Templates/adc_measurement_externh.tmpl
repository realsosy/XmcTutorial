package Model.APPS.ADC_MEASUREMENT.v4_1_22.Templates;

import Model.APPS.ADC_MEASUREMENT.v4_1_22.ADC_MEASUREMENT

out.print("""
/*
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2015-2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-02-16:
 *     - Initial version for DAVEv4.<BR>
 *
 * 2015-02-19:
 *     - Added GetResult APIs for XMC1100 devices.
 *
 * 2015-05-14:
 *     - Optimized the Manifest.<BR>
 *     - Modified the structure ADC_MEASUREMENT_channel_t to ADC_MEASUREMENT_CHANNEL_t.<BR>
 *
 * 2015-06-26:
 *     - Added input class resource consumption.<BR>
 *
 * 2015-07-09:
 *     - Documentation updated.<BR>
 *
 * 2015-07-31:
 *     - Updated the APP to support new devices.<BR>
 *     
 * 2015-10-01:
 *     - Updated the APP to support the interrupt control in XMC14.<BR>
 *
 * 2015-10-08:
 *     - Added support for XMC4700/XMC4800 devices.<BR>
 *
 * 2015-10-20:
 *     - Documentation updated.<BR>
 *
 * 2015-12-03:
 *     - Added support for XMC4300 device.<BR>
 *
 * 2015-02-09:
 *     - Updated the APP for the minimum required ANALOG_IO APP version.<BR>
 *
 * 2016-03-18:
 *     - Maximum number of channels for XMC41/42 increased to 9.<BR>
 *     - Added Post calibration time for XMC1x series in Total conversion Time.<BR>
 *     - Fixed the ADC_MEASUREMENT_Init() for ANALOG_IO initialization.<BR>
 *     - For XMC1100 series only: Deprecated the API ADC_MEASUREMENT_GetResult() and 
 *       ADC_MEASUREMENT_GetDetailedResult().<BR>
 *     - For XMC1100 series only: Added new API ADC_MEASUREMENT_GetGlobalResult() and 
 *       ADC_MEASUREMENT_GetGlobalDetailedResult().<BR>
 *
 * 2016-08-18:
 *     - Minimum sample time at low frequencies changed to incorporate Errata ADC_AI.H006 and ADC_AI.H007.
 *
 * @endcond
 *
 */

   
#ifndef ADC_MEASUREMENT_EXTERN_H
#define ADC_MEASUREMENT_EXTERN_H

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
 
/**********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/

""");
for (Object appIns : appInstancesList ) {
List channel_names=[appIns.gstring_CH_Name_1.value, appIns.gstring_CH_Name_2.value,appIns.gstring_CH_Name_3.value,
	appIns.gstring_CH_Name_4.value,appIns.gstring_CH_Name_5.value,appIns.gstring_CH_Name_6.value,
	appIns.gstring_CH_Name_7.value,appIns.gstring_CH_Name_8.value,appIns.gstring_CH_Name_9.value,
	appIns.gstring_CH_Name_10.value,appIns.gstring_CH_Name_11.value,appIns.gstring_CH_Name_12.value,
	appIns.gstring_CH_Name_13.value,appIns.gstring_CH_Name_14.value,appIns.gstring_CH_Name_15.value,
	appIns.gstring_CH_Name_16.value,appIns.gstring_CH_Name_17.value,appIns.gstring_CH_Name_18.value,
	appIns.gstring_CH_Name_19.value,appIns.gstring_CH_Name_20.value,appIns.gstring_CH_Name_21.value,
	appIns.gstring_CH_Name_22.value,appIns.gstring_CH_Name_23.value,appIns.gstring_CH_Name_24.value,
	appIns.gstring_CH_Name_25.value,appIns.gstring_CH_Name_26.value,];

	for(i = 0 ;i < appIns.ginteger_channel_number.value.toInteger(); i++)
	{
		out.print(""" extern ADC_MEASUREMENT_CHANNEL_t ADC_MEASUREMENT_${channel_names[i]}_handle;\n""")
	}
}
out.print("""
/***********************************************************************************************************************
 * EXTERN DECLARATIONS
 ***********************************************************************************************************************/
extern ADC_MEASUREMENT_t ${appInstancesList[0].getInstanceLabel()};

#endif /* ADC_MEASUREMENT_EXTERN_H */
""");
